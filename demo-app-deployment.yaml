apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app: demo-app
    spec:
      containers:
        - name: nginx
          image: nginx:stable
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8080
              name: stub-status
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
        - name: exporter
          image: nginx/nginx-prometheus-exporter:1.0.0
          args:
            - -nginx.scrape-uri=http://localhost:8080/stub_status
          ports:
            - containerPort: 9113
              name: metrics
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9113
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9113
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-prom
  namespace: monitoring
spec:
  selector:
    app: demo-app
  ports:
    - port: 9113
      targetPort: 9113
      name: metrics
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-web
  namespace: monitoring
spec:
  selector:
    app: demo-app
  ports:
    - port: 8080
      targetPort: 80
      name: metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: monitoring
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    server {
        listen 8080;
        server_name localhost;

        location /stub_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
  labels:
    app: example-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: my-example
          image: go-prometheus-demo:v1
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-web
  namespace: monitoring
spec:
  selector:
    app: demo-app
  ports:
    - port: 8081
      targetPort: 8080
      name: metrics
